"""new migration

Revision ID: d2d240604f1e
Revises: 
Create Date: 2024-10-22 12:38:37.481732

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'd2d240604f1e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('colony',
    sa.Column('country', sa.Enum('AFGHANISTAN', 'ALBANIA', 'ALGERIA', 'ANDORRA', 'ANGOLA', 'ANTIGUA_AND_BARBUDA', 'ARGENTINA', 'ARMENIA', 'AUSTRALIA', 'AUSTRIA', 'AZERBAIJAN', 'BAHAMAS', 'BAHRAIN', 'BANGLADESH', 'BARBADOS', 'BELARUS', 'BELGIUM', 'BELIZE', 'BENIN', 'BHUTAN', 'BOLIVIA', 'BOSNIA_AND_HERZEGOVINA', 'BOTSWANA', 'BRAZIL', 'BRUNEI', 'BULGARIA', 'BURKINA_FASO', 'BURUNDI', 'CABO_VERDE', 'CAMBODIA', 'CAMEROON', 'CANADA', 'CENTRAL_AFRICAN_REPUBLIC', 'CHAD', 'CHILE', 'CHINA', 'COLOMBIA', 'COMOROS', 'CONGO_DEMOCRATIC_REPUBLIC', 'CONGO_REPUBLIC', 'COSTA_RICA', 'CROATIA', 'CUBA', 'CYPRUS', 'CZECH_REPUBLIC', 'DENMARK', 'DJIBOUTI', 'DOMINICA', 'DOMINICAN_REPUBLIC', 'ECUADOR', 'EGYPT', 'EL_SALVADOR', 'EQUATORIAL_GUINEA', 'ERITREA', 'ESTONIA', 'ESWATINI', 'ETHIOPIA', 'FIJI', 'FINLAND', 'FRANCE', 'GABON', 'GAMBIA', 'GEORGIA', 'GERMANY', 'GHANA', 'GREECE', 'GRENADA', 'GUATEMALA', 'GUINEA', 'GUINEA_BISSAU', 'GUYANA', 'HAITI', 'HONDURAS', 'HUNGARY', 'ICELAND', 'INDIA', 'INDONESIA', 'IRAN', 'IRAQ', 'IRELAND', 'ISRAEL', 'ITALY', 'JAMAICA', 'JAPAN', 'JORDAN', 'KAZAKHSTAN', 'KENYA', 'KIRIBATI', 'KOREA_NORTH', 'KOREA_SOUTH', 'KOSOVO', 'KUWAIT', 'KYRGYZSTAN', 'LAOS', 'LATVIA', 'LEBANON', 'LESOTHO', 'LIBERIA', 'LIBYA', 'LIECHTENSTEIN', 'LITHUANIA', 'LUXEMBOURG', 'MADAGASCAR', 'MALAWI', 'MALAYSIA', 'MALDIVES', 'MALI', 'MALTA', 'MARSHALL_ISLANDS', 'MAURITANIA', 'MAURITIUS', 'MEXICO', 'MICRONESIA', 'MOLDOVA', 'MONACO', 'MONGOLIA', 'MONTENEGRO', 'MOROCCO', 'MOZAMBIQUE', 'MYANMAR', 'NAMIBIA', 'NAURU', 'NEPAL', 'NETHERLANDS', 'NEW_ZEALAND', 'NICARAGUA', 'NIGER', 'NIGERIA', 'NORTH_MACEDONIA', 'NORWAY', 'OMAN', 'PAKISTAN', 'PALAU', 'PALESTINE', 'PANAMA', 'PAPUA_NEW_GUINEA', 'PARAGUAY', 'PERU', 'PHILIPPINES', 'POLAND', 'PORTUGAL', 'QATAR', 'ROMANIA', 'RUSSIA', 'RWANDA', 'SAINT_KITTS_AND_NEVIS', 'SAINT_LUCIA', 'SAINT_VINCENT_AND_GRENADINES', 'SAMOA', 'SAN_MARINO', 'SAO_TOME_AND_PRINCIPE', 'SAUDI_ARABIA', 'SENEGAL', 'SERBIA', 'SEYCHELLES', 'SIERRA_LEONE', 'SINGAPORE', 'SLOVAKIA', 'SLOVENIA', 'SOLOMON_ISLANDS', 'SOMALIA', 'SOUTH_AFRICA', 'SOUTH_SUDAN', 'SPAIN', 'SRI_LANKA', 'SUDAN', 'SURINAME', 'SWEDEN', 'SWITZERLAND', 'SYRIA', 'TAIWAN', 'TAJIKISTAN', 'TANZANIA', 'THAILAND', 'TIMOR_LESTE', 'TOGO', 'TONGA', 'TRINIDAD_AND_TOBAGO', 'TUNISIA', 'TURKEY', 'TURKMENISTAN', 'TUVALU', 'UGANDA', 'UKRAINE', 'UNITED_ARAB_EMIRATES', 'UNITED_KINGDOM', 'UNITED_STATES', 'URUGUAY', 'UZBEKISTAN', 'VANUATU', 'VATICAN_CITY', 'VENEZUELA', 'VIETNAM', 'YEMEN', 'ZAMBIA', 'ZIMBABWE', name='country'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('model', sa.Enum('colony', 'user', 'player', 'cursedtechnique', 'ctapp', 'barriertech', 'match', 'vote', 'barrierdetail', 'adminuser', 'permission', name='modelname'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('level', sa.Enum('READ', 'CREATE', 'UPDATE', 'DELETE', name='permissionlevel'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permission_level'), 'permission', ['level'], unique=False)
    op.create_index(op.f('ix_permission_model'), 'permission', ['model'], unique=False)
    op.create_index(op.f('ix_permission_name'), 'permission', ['name'], unique=False)
    op.create_table('user',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country', sa.Enum('AFGHANISTAN', 'ALBANIA', 'ALGERIA', 'ANDORRA', 'ANGOLA', 'ANTIGUA_AND_BARBUDA', 'ARGENTINA', 'ARMENIA', 'AUSTRALIA', 'AUSTRIA', 'AZERBAIJAN', 'BAHAMAS', 'BAHRAIN', 'BANGLADESH', 'BARBADOS', 'BELARUS', 'BELGIUM', 'BELIZE', 'BENIN', 'BHUTAN', 'BOLIVIA', 'BOSNIA_AND_HERZEGOVINA', 'BOTSWANA', 'BRAZIL', 'BRUNEI', 'BULGARIA', 'BURKINA_FASO', 'BURUNDI', 'CABO_VERDE', 'CAMBODIA', 'CAMEROON', 'CANADA', 'CENTRAL_AFRICAN_REPUBLIC', 'CHAD', 'CHILE', 'CHINA', 'COLOMBIA', 'COMOROS', 'CONGO_DEMOCRATIC_REPUBLIC', 'CONGO_REPUBLIC', 'COSTA_RICA', 'CROATIA', 'CUBA', 'CYPRUS', 'CZECH_REPUBLIC', 'DENMARK', 'DJIBOUTI', 'DOMINICA', 'DOMINICAN_REPUBLIC', 'ECUADOR', 'EGYPT', 'EL_SALVADOR', 'EQUATORIAL_GUINEA', 'ERITREA', 'ESTONIA', 'ESWATINI', 'ETHIOPIA', 'FIJI', 'FINLAND', 'FRANCE', 'GABON', 'GAMBIA', 'GEORGIA', 'GERMANY', 'GHANA', 'GREECE', 'GRENADA', 'GUATEMALA', 'GUINEA', 'GUINEA_BISSAU', 'GUYANA', 'HAITI', 'HONDURAS', 'HUNGARY', 'ICELAND', 'INDIA', 'INDONESIA', 'IRAN', 'IRAQ', 'IRELAND', 'ISRAEL', 'ITALY', 'JAMAICA', 'JAPAN', 'JORDAN', 'KAZAKHSTAN', 'KENYA', 'KIRIBATI', 'KOREA_NORTH', 'KOREA_SOUTH', 'KOSOVO', 'KUWAIT', 'KYRGYZSTAN', 'LAOS', 'LATVIA', 'LEBANON', 'LESOTHO', 'LIBERIA', 'LIBYA', 'LIECHTENSTEIN', 'LITHUANIA', 'LUXEMBOURG', 'MADAGASCAR', 'MALAWI', 'MALAYSIA', 'MALDIVES', 'MALI', 'MALTA', 'MARSHALL_ISLANDS', 'MAURITANIA', 'MAURITIUS', 'MEXICO', 'MICRONESIA', 'MOLDOVA', 'MONACO', 'MONGOLIA', 'MONTENEGRO', 'MOROCCO', 'MOZAMBIQUE', 'MYANMAR', 'NAMIBIA', 'NAURU', 'NEPAL', 'NETHERLANDS', 'NEW_ZEALAND', 'NICARAGUA', 'NIGER', 'NIGERIA', 'NORTH_MACEDONIA', 'NORWAY', 'OMAN', 'PAKISTAN', 'PALAU', 'PALESTINE', 'PANAMA', 'PAPUA_NEW_GUINEA', 'PARAGUAY', 'PERU', 'PHILIPPINES', 'POLAND', 'PORTUGAL', 'QATAR', 'ROMANIA', 'RUSSIA', 'RWANDA', 'SAINT_KITTS_AND_NEVIS', 'SAINT_LUCIA', 'SAINT_VINCENT_AND_GRENADINES', 'SAMOA', 'SAN_MARINO', 'SAO_TOME_AND_PRINCIPE', 'SAUDI_ARABIA', 'SENEGAL', 'SERBIA', 'SEYCHELLES', 'SIERRA_LEONE', 'SINGAPORE', 'SLOVAKIA', 'SLOVENIA', 'SOLOMON_ISLANDS', 'SOMALIA', 'SOUTH_AFRICA', 'SOUTH_SUDAN', 'SPAIN', 'SRI_LANKA', 'SUDAN', 'SURINAME', 'SWEDEN', 'SWITZERLAND', 'SYRIA', 'TAIWAN', 'TAJIKISTAN', 'TANZANIA', 'THAILAND', 'TIMOR_LESTE', 'TOGO', 'TONGA', 'TRINIDAD_AND_TOBAGO', 'TUNISIA', 'TURKEY', 'TURKMENISTAN', 'TUVALU', 'UGANDA', 'UKRAINE', 'UNITED_ARAB_EMIRATES', 'UNITED_KINGDOM', 'UNITED_STATES', 'URUGUAY', 'UZBEKISTAN', 'VANUATU', 'VATICAN_CITY', 'VENEZUELA', 'VIETNAM', 'YEMEN', 'ZAMBIA', 'ZIMBABWE', name='country'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usernamedb', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created', sa.Date(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_country'), 'user', ['country'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_index(op.f('ix_user_usernamedb'), 'user', ['usernamedb'], unique=True)
    op.create_table('adminuser',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adminuser_user_id'), 'adminuser', ['user_id'], unique=False)
    op.create_table('player',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sa.Enum('m', 'f', 'nb', name='gender'), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grade', sa.Enum('SPECIAL', 'ONE', 'TWO', 'THREE', 'FOUR', name='grade'), nullable=False),
    sa.Column('points', sa.Float(), nullable=False),
    sa.Column('created', sa.Date(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('colony_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['colony_id'], ['colony.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_player_age'), 'player', ['age'], unique=False)
    op.create_index(op.f('ix_player_colony_id'), 'player', ['colony_id'], unique=False)
    op.create_index(op.f('ix_player_created'), 'player', ['created'], unique=False)
    op.create_index(op.f('ix_player_gender'), 'player', ['gender'], unique=False)
    op.create_index(op.f('ix_player_grade'), 'player', ['grade'], unique=False)
    op.create_index(op.f('ix_player_name'), 'player', ['name'], unique=False)
    op.create_index(op.f('ix_player_role'), 'player', ['role'], unique=False)
    op.create_index(op.f('ix_player_user_id'), 'player', ['user_id'], unique=False)
    op.create_table('adminpermissionlink',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['adminuser.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.PrimaryKeyConstraint('admin_id', 'permission_id')
    )
    op.create_index(op.f('ix_adminpermissionlink_admin_id'), 'adminpermissionlink', ['admin_id'], unique=False)
    op.create_index(op.f('ix_adminpermissionlink_permission_id'), 'adminpermissionlink', ['permission_id'], unique=False)
    op.create_table('barriertech',
    sa.Column('domain_expansion', sa.Boolean(), nullable=False),
    sa.Column('binding_vow', sa.Boolean(), nullable=False),
    sa.Column('simple_domain', sa.Boolean(), nullable=False),
    sa.Column('de_end_time', sa.DateTime(), nullable=True),
    sa.Column('bv_end_time', sa.DateTime(), nullable=True),
    sa.Column('sd_end_time', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cursedtechnique',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('definition', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cursedtechnique_player_id'), 'cursedtechnique', ['player_id'], unique=False)
    op.create_table('match',
    sa.Column('begin', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('part', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('colony_id', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['colony_id'], ['colony.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['winner_id'], ['player.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_colony_id'), 'match', ['colony_id'], unique=False)
    op.create_index(op.f('ix_match_winner_id'), 'match', ['winner_id'], unique=False)
    op.create_table('barrierdetail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('domain_counter', sa.Integer(), nullable=False),
    sa.Column('simple_domain_counter', sa.Integer(), nullable=False),
    sa.Column('binding_vow_counter', sa.Integer(), nullable=False),
    sa.Column('barrier_tech_id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['barrier_tech_id'], ['barriertech.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ctapp',
    sa.Column('application', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('ct_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ct_id'], ['cursedtechnique.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ctapp_ct_id'), 'ctapp', ['ct_id'], unique=False)
    op.create_table('matchplayerlink',
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('match_id', 'player_id')
    )
    op.create_table('vote',
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('ct_app_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ct_app_id'], ['ctapp.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vote_ct_app_id'), 'vote', ['ct_app_id'], unique=False)
    op.create_index(op.f('ix_vote_match_id'), 'vote', ['match_id'], unique=False)
    op.create_index(op.f('ix_vote_player_id'), 'vote', ['player_id'], unique=False)
    op.create_index(op.f('ix_vote_user_id'), 'vote', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vote_user_id'), table_name='vote')
    op.drop_index(op.f('ix_vote_player_id'), table_name='vote')
    op.drop_index(op.f('ix_vote_match_id'), table_name='vote')
    op.drop_index(op.f('ix_vote_ct_app_id'), table_name='vote')
    op.drop_table('vote')
    op.drop_table('matchplayerlink')
    op.drop_index(op.f('ix_ctapp_ct_id'), table_name='ctapp')
    op.drop_table('ctapp')
    op.drop_table('barrierdetail')
    op.drop_index(op.f('ix_match_winner_id'), table_name='match')
    op.drop_index(op.f('ix_match_colony_id'), table_name='match')
    op.drop_table('match')
    op.drop_index(op.f('ix_cursedtechnique_player_id'), table_name='cursedtechnique')
    op.drop_table('cursedtechnique')
    op.drop_table('barriertech')
    op.drop_index(op.f('ix_adminpermissionlink_permission_id'), table_name='adminpermissionlink')
    op.drop_index(op.f('ix_adminpermissionlink_admin_id'), table_name='adminpermissionlink')
    op.drop_table('adminpermissionlink')
    op.drop_index(op.f('ix_player_user_id'), table_name='player')
    op.drop_index(op.f('ix_player_role'), table_name='player')
    op.drop_index(op.f('ix_player_name'), table_name='player')
    op.drop_index(op.f('ix_player_grade'), table_name='player')
    op.drop_index(op.f('ix_player_gender'), table_name='player')
    op.drop_index(op.f('ix_player_created'), table_name='player')
    op.drop_index(op.f('ix_player_colony_id'), table_name='player')
    op.drop_index(op.f('ix_player_age'), table_name='player')
    op.drop_table('player')
    op.drop_index(op.f('ix_adminuser_user_id'), table_name='adminuser')
    op.drop_table('adminuser')
    op.drop_index(op.f('ix_user_usernamedb'), table_name='user')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_country'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_permission_name'), table_name='permission')
    op.drop_index(op.f('ix_permission_model'), table_name='permission')
    op.drop_index(op.f('ix_permission_level'), table_name='permission')
    op.drop_table('permission')
    op.drop_table('colony')
    # ### end Alembic commands ###
